pipeline {
  agent any 
  tools {
    maven 'Maven'
  }
  stages {
    stage ('Initialize') {
      steps {
        sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
           ''' 
   }
  }
  
  stage ('Check-Git-Secrets') {
      steps {
        sh 'rm trufflehog || true'
        sh 'docker run gesellix/trufflehog --json https://github.com/autoking777/webapp.git > trufflehog'
        sh 'cat trufflehog'
      }
    }
  
  stage ('Source Composition Analysis') {
      steps {
         sh 'rm owasp* || true'
         sh 'wget "https://raw.githubusercontent.com/autoking777/webapp/master/owasp-dependency-check.sh" '
         sh 'chmod 777 owasp-dependency-check.sh'
         //sh 'bash owasp-dependency-check.sh'
         //sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'
        
        }
    }
    
      stage ('SAST') {
        steps {
         withSonarQubeEnv('sonar') {
          sh 'mvn sonar:sonar'
          sh 'cat target/sonar/report-task.txt'
        }
      }
    }
    
  stage ('Build') {
      steps {
      sh 'mvn clean package'
      }
    }
    
  stage ('Deploy-To-Tomcat') {
          steps {
            sshagent(['tomcat']) {
            sh 'scp -o StrictHostKeyChecking=no target/*.war ubuntu@172.31.87.20:/prod/tomcat/webapps/webapp.war'
           }      
          }
         }
         
             stage ('DAST') {
      steps {
        sshagent(['zap']) {
         sh 'ssh -o  StrictHostKeyChecking=no ubuntu@172.31.28.38 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://172.31.87.20:8080/webapp/" || true'
        }
        }
        }
        
       }
      }
